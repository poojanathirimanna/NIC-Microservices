<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/components/upload/UploadHeader.jsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/upload/UploadHeader.jsx" />
              <option name="originalContent" value="import React from 'react';&#10;&#10;const UploadHeader = ({ styles }) =&gt; {&#10;  return (&#10;    &lt;div style={styles.header}&gt;&#10;      &lt;div style={styles.headerIcon}&gt;&#10;        &lt;span style={styles.iconEmoji}&gt;&lt;/span&gt;&#10;      &lt;/div&gt;&#10;      &lt;h1 style={styles.title}&gt;NIC CSV Upload&lt;/h1&gt;&#10;      &lt;p style={styles.subtitle}&gt;&#10;        Upload exactly 4 CSV files for validation and processing&#10;      &lt;/p&gt;&#10;    &lt;/div&gt;&#10;  );&#10;};&#10;&#10;export default UploadHeader;&#10;" />
              <option name="updatedContent" value="import React from 'react';&#10;&#10;const UploadHeader = ({ styles, isMobile, isTablet }) =&gt; {&#10;  return (&#10;    &lt;div style={styles.header}&gt;&#10;      &lt;div style={styles.headerIcon}&gt;&#10;        &lt;span style={styles.iconEmoji}&gt;&lt;/span&gt;&#10;      &lt;/div&gt;&#10;      &lt;h1 style={{&#10;        ...styles.title,&#10;        fontSize: isMobile ? '32px' : isTablet ? '40px' : '48px'&#10;      }}&gt;NIC CSV Upload&lt;/h1&gt;&#10;      &lt;p style={{&#10;        ...styles.subtitle,&#10;        fontSize: isMobile ? '14px' : isTablet ? '16px' : '18px'&#10;      }}&gt;&#10;        Upload exactly 4 CSV files for validation and processing&#10;      &lt;/p&gt;&#10;    &lt;/div&gt;&#10;  );&#10;};&#10;&#10;export default UploadHeader;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/pages/NICUploadPage.jsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/pages/NICUploadPage.jsx" />
              <option name="originalContent" value="import React, { useState, useMemo, useRef } from 'react';&#10;import { uploadNICFiles } from '../services/nicService';&#10;import Navbar from '../components/Navbar';&#10;import UploadHeader from '../components/upload/UploadHeader';&#10;import FileUploadArea from '../components/upload/FileUploadArea';&#10;import FileList from '../components/upload/FileList';&#10;import ActionButtons from '../components/upload/ActionButtons';&#10;import ErrorMessage from '../components/upload/ErrorMessage';&#10;import ProcessingSummary from '../components/upload/ProcessingSummary';&#10;import ResultsTable from '../components/upload/ResultsTable';&#10;&#10;const NICUploadPage = () =&gt; {&#10;  const [files, setFiles] = useState([]);&#10;  const [results, setResults] = useState([]);&#10;  const [responseInfo, setResponseInfo] = useState(null);&#10;  const [error, setError] = useState('');&#10;  const [isUploading, setIsUploading] = useState(false);&#10;  const [dragActive, setDragActive] = useState(false);&#10;  const fileInputRef = useRef(null);&#10;&#10;  // Helper: check exactly 4 CSV files selected&#10;  const isValidSelection = useMemo(() =&gt; {&#10;    if (files.length !== 4) return false;&#10;    return files.every(&#10;      (f) =&gt;&#10;        f.name.toLowerCase().endsWith('.csv') ||&#10;        f.type === 'text/csv' ||&#10;        f.type === 'application/vnd.ms-excel'&#10;    );&#10;  }, [files]);&#10;&#10;  const handleFileChange = (e) =&gt; {&#10;    const picked = Array.from(e.target.files || []);&#10;    const onlyCsv = picked.filter(&#10;      (f) =&gt;&#10;        f.name.toLowerCase().endsWith('.csv') ||&#10;        f.type === 'text/csv' ||&#10;        f.type === 'application/vnd.ms-excel'&#10;    );&#10;    setFiles(onlyCsv);&#10;&#10;    if (picked.length !== 4) {&#10;      setError('Please select exactly 4 files.');&#10;    } else if (onlyCsv.length !== 4) {&#10;      setError('All 4 files must be CSV (.csv).');&#10;    } else {&#10;      setError('');&#10;    }&#10;  };&#10;&#10;  const handleDrag = (e) =&gt; {&#10;    e.preventDefault();&#10;    e.stopPropagation();&#10;    if (e.type === &quot;dragenter&quot; || e.type === &quot;dragover&quot;) {&#10;      setDragActive(true);&#10;    } else if (e.type === &quot;dragleave&quot;) {&#10;      setDragActive(false);&#10;    }&#10;  };&#10;&#10;  const handleDrop = (e) =&gt; {&#10;    e.preventDefault();&#10;    e.stopPropagation();&#10;    setDragActive(false);&#10;&#10;    if (e.dataTransfer.files &amp;&amp; e.dataTransfer.files[0]) {&#10;      const droppedFiles = Array.from(e.dataTransfer.files);&#10;      const onlyCsv = droppedFiles.filter(&#10;        (f) =&gt;&#10;          f.name.toLowerCase().endsWith('.csv') ||&#10;          f.type === 'text/csv' ||&#10;          f.type === 'application/vnd.ms-excel'&#10;      );&#10;      setFiles(onlyCsv);&#10;&#10;      if (droppedFiles.length !== 4) {&#10;        setError('Please select exactly 4 files.');&#10;      } else if (onlyCsv.length !== 4) {&#10;        setError('All 4 files must be CSV (.csv).');&#10;      } else {&#10;        setError('');&#10;      }&#10;    }&#10;  };&#10;&#10;  const handleUpload = async () =&gt; {&#10;    if (!isValidSelection) {&#10;      setError('Please upload exactly 4 CSV files.');&#10;      return;&#10;    }&#10;&#10;    setIsUploading(true);&#10;    try {&#10;      const token = localStorage.getItem('token');&#10;      const response = await uploadNICFiles(files, token);&#10;&#10;      setResults(response?.records || []);&#10;      setResponseInfo({&#10;        message: response?.message || 'Upload completed.',&#10;        filesProcessed: response?.filesProcessed ?? files.length,&#10;        inserted: response?.inserted ?? 0,&#10;        skipped: response?.skipped ?? 0,&#10;        skippedNICs: response?.skippedNICs || [],&#10;      });&#10;      setError('');&#10;    } catch (err) {&#10;      console.error(err);&#10;      setError('Upload failed. Please try again.');&#10;    }&#10;    setIsUploading(false);&#10;  };&#10;&#10;  const handleClear = () =&gt; {&#10;    setFiles([]);&#10;    setResults([]);&#10;    setResponseInfo(null);&#10;    setError('');&#10;    if (fileInputRef.current) fileInputRef.current.value = '';&#10;  };&#10;&#10;  const formatFileSize = (bytes) =&gt; {&#10;    if (bytes === 0) return '0 Bytes';&#10;    const k = 1024;&#10;    const sizes = ['Bytes', 'KB', 'MB', 'GB'];&#10;    const i = Math.floor(Math.log(bytes) / Math.log(k));&#10;    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];&#10;  };&#10;&#10;  const RotatingBackground = () =&gt; (&#10;    &lt;div style={{&#10;      position: 'fixed',&#10;      top: '-50%',&#10;      left: '-50%',&#10;      width: '200%',&#10;      height: '250%',&#10;      backgroundImage: `url('https://images.unsplash.com/photo-1451187580459-43490279c0fa?ixlib=rb-4.0.3&amp;auto=format&amp;fit=crop&amp;w=2072&amp;q=80')`,&#10;      backgroundSize: 'cover',&#10;      backgroundPosition: 'center',&#10;      animation: 'slowRotate 600s linear infinite',&#10;    }} /&gt;&#10;  );&#10;&#10;  return (&#10;    &lt;&gt;&#10;      &lt;Navbar /&gt;&#10;      &lt;div style={styles.wrapper}&gt;&#10;        &lt;RotatingBackground /&gt;&#10;        &lt;div style={styles.container}&gt;&#10;          {/* Header Section */}&#10;          &lt;UploadHeader styles={styles} /&gt;&#10;&#10;          {/* Upload Section */}&#10;          &lt;div style={styles.uploadSection}&gt;&#10;            &lt;input&#10;              ref={fileInputRef}&#10;              type=&quot;file&quot;&#10;              multiple&#10;              accept=&quot;.csv,text/csv&quot;&#10;              onChange={handleFileChange}&#10;              style={styles.hiddenInput}&#10;            /&gt;&#10;&#10;            &lt;FileUploadArea&#10;              styles={styles}&#10;              dragActive={dragActive}&#10;              files={files}&#10;              handleDrag={handleDrag}&#10;              handleDrop={handleDrop}&#10;              fileInputRef={fileInputRef}&#10;            /&gt;&#10;&#10;            &lt;FileList&#10;              styles={styles}&#10;              files={files}&#10;              isValidSelection={isValidSelection}&#10;              formatFileSize={formatFileSize}&#10;            /&gt;&#10;&#10;            &lt;ActionButtons&#10;              styles={styles}&#10;              handleUpload={handleUpload}&#10;              handleClear={handleClear}&#10;              isValidSelection={isValidSelection}&#10;              isUploading={isUploading}&#10;            /&gt;&#10;&#10;            &lt;ErrorMessage&#10;              styles={styles}&#10;              error={error}&#10;            /&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;ProcessingSummary&#10;            styles={styles}&#10;            responseInfo={responseInfo}&#10;          /&gt;&#10;&#10;          &lt;ResultsTable&#10;            styles={styles}&#10;            results={results}&#10;          /&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Enhanced CSS Animations */}&#10;      &lt;style&gt;{`&#10;        @keyframes fadeInUp {&#10;          from {&#10;            opacity: 0;&#10;            transform: translateY(30px);&#10;          }&#10;          to {&#10;            opacity: 1;&#10;            transform: translateY(0);&#10;          }&#10;        }&#10;&#10;        @keyframes slideInLeft {&#10;          from {&#10;            opacity: 0;&#10;            transform: translateX(-30px);&#10;          }&#10;          to {&#10;            opacity: 1;&#10;            transform: translateX(0);&#10;          }&#10;        }&#10;&#10;        @keyframes pulse {&#10;          0%, 100% {&#10;            transform: scale(1);&#10;          }&#10;          50% {&#10;            transform: scale(1.05);&#10;          }&#10;        }&#10;&#10;        @keyframes spin {&#10;          from { transform: rotate(0deg); }&#10;          to { transform: rotate(360deg); }&#10;        }&#10;&#10;        @keyframes shake {&#10;          0%, 100% { transform: translateX(0); }&#10;          10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }&#10;          20%, 40%, 60%, 80% { transform: translateX(5px); }&#10;        }&#10;&#10;        /* Slow Rotating Background Animation */&#10;        @keyframes slowRotate {&#10;          from {&#10;            transform: rotate(0deg);&#10;          }&#10;          to {&#10;            transform: rotate(360deg);&#10;          }&#10;        }&#10;&#10;        .fade-in-up {&#10;          animation: fadeInUp 0.6s ease-out;&#10;        }&#10;&#10;        .slide-in-left {&#10;          animation: slideInLeft 0.5s ease-out;&#10;        }&#10;&#10;        .pulse-animation {&#10;          animation: pulse 2s ease-in-out infinite;&#10;        }&#10;&#10;        .spin-animation {&#10;          animation: spin 1s linear infinite;&#10;        }&#10;&#10;        .shake-animation {&#10;          animation: shake 0.5s ease-in-out;&#10;        }&#10;&#10;        /* Hover Effects */&#10;        .hover-lift {&#10;          transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);&#10;        }&#10;&#10;        .hover-lift:hover {&#10;          transform: translateY(-4px);&#10;          box-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);&#10;        }&#10;&#10;        /* Responsive */&#10;        @media (max-width: 768px) {&#10;          .fade-in-up {&#10;            animation: fadeInUp 0.4s ease-out;&#10;          }&#10;        }&#10;&#10;        /* Reduce motion for accessibility */&#10;        @media (prefers-reduced-motion: reduce) {&#10;          .slowRotate {&#10;            animation: none !important;&#10;          }&#10;        }&#10;      `}&lt;/style&gt;&#10;    &lt;/&gt;&#10;  );&#10;};&#10;&#10;const styles = {&#10;  wrapper: {&#10;    minHeight: '100vh',&#10;    background: `linear-gradient(135deg, rgba(15, 23, 42, 0.9) 0%, rgba(30, 41, 59, 0.85) 25%, rgba(51, 65, 85, 0.8) 50%, rgba(71, 85, 105, 0.75) 75%, rgba(100, 116, 139, 0.7) 100%)`,&#10;    padding: '100px 20px 40px',&#10;    display: 'flex',&#10;    justifyContent: 'center',&#10;    fontFamily: &quot;'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif&quot;,&#10;    position: 'relative',&#10;    overflow: 'hidden',&#10;  },&#10;  container: {&#10;    maxWidth: '1000px',&#10;    width: '100%',&#10;    display: 'flex',&#10;    flexDirection: 'column',&#10;    gap: '32px',&#10;  },&#10;  header: {&#10;    textAlign: 'center',&#10;    color: 'white',&#10;    marginBottom: '20px',&#10;  },&#10;  headerIcon: {&#10;    width: '80px',&#10;    height: '80px',&#10;    borderRadius: '50%',&#10;    background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))',&#10;    display: 'flex',&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;    margin: '0 auto 24px',&#10;    backdropFilter: 'blur(20px)',&#10;    border: '2px solid rgba(255, 255, 255, 0.2)',&#10;    boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)',&#10;  },&#10;  iconEmoji: {&#10;    fontSize: '36px',&#10;  },&#10;  title: {&#10;    fontSize: '48px',&#10;    fontWeight: '700',&#10;    margin: '0 0 16px 0',&#10;    letterSpacing: '-1px',&#10;    textShadow: '0 2px 4px rgba(0, 0, 0, 0.3)',&#10;    opacity:0.9,&#10;  },&#10;  subtitle: {&#10;    fontSize: '18px',&#10;    opacity: 0.9,&#10;    margin: 0,&#10;    fontWeight: '400',&#10;    color: 'rgba(255, 255, 255, 0.8)',&#10;  },&#10;  uploadSection: {&#10;    background: 'rgba(255, 255, 255, 0.1)',&#10;    borderRadius: '24px',&#10;    padding: '40px',&#10;    boxShadow: '0 25px 50px rgba(0, 0, 0, 0.2)',&#10;    backdropFilter: 'blur(20px)',&#10;    border: '1px solid rgba(255, 255, 255, 0.2)',&#10;  },&#10;  uploadArea: {&#10;    border: '3px dashed rgba(255, 255, 255, 0.4)',&#10;    borderRadius: '16px',&#10;    padding: '48px 24px',&#10;    textAlign: 'center',&#10;    cursor: 'pointer',&#10;    transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',&#10;    background: 'rgba(255, 255, 255, 0.1)', // Changed from 0.05 to 0.1 for better visibility&#10;    backdropFilter: 'blur(20px)', // Added glassmorphism effect&#10;    marginBottom: '24px',&#10;  },&#10;  uploadAreaActive: {&#10;    borderColor: 'rgba(59, 130, 246, 0.8)',&#10;    background: 'rgba(59, 130, 246, 0.1)',&#10;    transform: 'scale(1.02)',&#10;  },&#10;  uploadAreaWithFiles: {&#10;    borderColor: 'rgba(16, 185, 129, 0.8)',&#10;    background: 'rgba(16, 185, 129, 0.1)',&#10;  },&#10;  hiddenInput: {&#10;    display: 'none',&#10;  },&#10;  uploadContent: {&#10;    display: 'flex',&#10;    flexDirection: 'column',&#10;    alignItems: 'center',&#10;    gap: '16px',&#10;  },&#10;  uploadIcon: {&#10;    width: '64px',&#10;    height: '64px',&#10;    borderRadius: '50%',&#10;    background: 'linear-gradient(135deg, #3b82f6, #1d4ed8)',&#10;    display: 'flex',&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;    boxShadow: '0 8px 25px rgba(59, 130, 246, 0.3)',&#10;  },&#10;  uploadIconEmoji: {&#10;    fontSize: '28px',&#10;  },&#10;  uploadTitle: {&#10;    fontSize: '24px',&#10;    fontWeight: '700',&#10;    color: '#ffffff', // Ensured white text&#10;    margin: 0,&#10;    textShadow: '0 2px 4px rgba(0, 0, 0, 0.3)', // Added text shadow for better visibility&#10;  },&#10;  uploadText: {&#10;    fontSize: '16px',&#10;    color: 'rgba(255, 255, 255, 0.9)', // Increased opacity for better visibility&#10;    margin: 0,&#10;    textShadow: '0 1px 2px rgba(0, 0, 0, 0.3)', // Added text shadow&#10;  },&#10;  uploadRequirements: {&#10;    display: 'flex',&#10;    gap: '24px',&#10;    flexWrap: 'wrap',&#10;    justifyContent: 'center',&#10;  },&#10;  requirement: {&#10;    fontSize: '14px',&#10;    color: 'rgba(255, 255, 255, 0.9)', // Increased opacity&#10;    background: 'rgba(255, 255, 255, 0.2)', // Increased background opacity&#10;    padding: '8px 16px',&#10;    borderRadius: '20px',&#10;    fontWeight: '500',&#10;    border: '1px solid rgba(255, 255, 255, 0.3)', // Added border for definition&#10;    backdropFilter: 'blur(10px)', // Added glassmorphism&#10;  },&#10;  fileList: {&#10;    background: 'rgba(255, 255, 255, 0.15)',&#10;    borderRadius: '16px',&#10;    padding: '24px',&#10;    marginBottom: '24px',&#10;    border: '1px solid rgba(255, 255, 255, 0.2)',&#10;    backdropFilter: 'blur(10px)',&#10;  },&#10;  fileListHeader: {&#10;    display: 'flex',&#10;    justifyContent: 'space-between',&#10;    alignItems: 'center',&#10;    marginBottom: '16px',&#10;  },&#10;  fileListTitle: {&#10;    fontSize: '18px',&#10;    fontWeight: '600',&#10;    color: '#ffffff',&#10;  },&#10;  validBadge: {&#10;    background: '#10b981',&#10;    color: 'white',&#10;    padding: '6px 12px',&#10;    borderRadius: '12px',&#10;    fontSize: '12px',&#10;    fontWeight: '600',&#10;  },&#10;  fileGrid: {&#10;    display: 'grid',&#10;    gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',&#10;    gap: '12px',&#10;    marginBottom: '16px',&#10;  },&#10;  fileCard: {&#10;    background: 'rgba(255, 255, 255, 0.2)',&#10;    borderRadius: '12px',&#10;    padding: '16px',&#10;    border: '1px solid rgba(255, 255, 255, 0.3)',&#10;    transition: 'all 0.3s ease',&#10;    backdropFilter: 'blur(10px)',&#10;    '&amp;:hover': {&#10;      boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',&#10;      transform: 'translateY(-2px)',&#10;    }&#10;  },&#10;  fileCardHeader: {&#10;    display: 'flex',&#10;    alignItems: 'center',&#10;    gap: '8px',&#10;    marginBottom: '8px',&#10;  },&#10;  fileIcon: {&#10;    fontSize: '20px',&#10;  },&#10;  fileName: {&#10;    fontSize: '14px',&#10;    fontWeight: '600',&#10;    color: '#ffffff',&#10;    overflow: 'hidden',&#10;    textOverflow: 'ellipsis',&#10;    whiteSpace: 'nowrap',&#10;    flex: 1,&#10;  },&#10;  fileDetails: {&#10;    display: 'flex',&#10;    justifyContent: 'space-between',&#10;    alignItems: 'center',&#10;  },&#10;  fileSize: {&#10;    fontSize: '12px',&#10;    color: 'rgba(255, 255, 255, 0.8)',&#10;  },&#10;  fileType: {&#10;    background: 'rgba(59, 130, 246, 0.2)',&#10;    color: '#ffffff',&#10;    padding: '2px 8px',&#10;    borderRadius: '6px',&#10;    fontSize: '10px',&#10;    fontWeight: '600',&#10;    border: '1px solid rgba(59, 130, 246, 0.3)',&#10;  },&#10;  warningCard: {&#10;    background: '#fef3c7',&#10;    border: '1px solid #f59e0b',&#10;    borderRadius: '12px',&#10;    padding: '12px 16px',&#10;    display: 'flex',&#10;    alignItems: 'center',&#10;    gap: '8px',&#10;  },&#10;  warningIcon: {&#10;    fontSize: '16px',&#10;  },&#10;  warningText: {&#10;    color: '#92400e',&#10;    fontSize: '14px',&#10;    fontWeight: '500',&#10;  },&#10;  actionButtons: {&#10;    display: 'flex',&#10;    gap: '16px',&#10;    justifyContent: 'center',&#10;    marginBottom: '24px',&#10;    flexWrap: 'wrap',&#10;  },&#10;  primaryButton: {&#10;    background: 'linear-gradient(135deg, #3b82f6, #1d4ed8)',&#10;    color: 'white',&#10;    border: 'none',&#10;    borderRadius: '12px',&#10;    padding: '16px 32px',&#10;    fontSize: '16px',&#10;    fontWeight: '600',&#10;    cursor: 'pointer',&#10;    display: 'flex',&#10;    alignItems: 'center',&#10;    gap: '8px',&#10;    boxShadow: '0 4px 14px rgba(59, 130, 246, 0.4)',&#10;    transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',&#10;    '&amp;:hover': {&#10;      transform: 'translateY(-2px)',&#10;      boxShadow: '0 8px 25px rgba(59, 130, 246, 0.4)',&#10;    }&#10;  },&#10;  secondaryButton: {&#10;    background: 'linear-gradient(135deg, #ef4444, #dc2626)',&#10;    color: 'white',&#10;    border: 'none',&#10;    borderRadius: '12px',&#10;    padding: '16px 32px',&#10;    fontSize: '16px',&#10;    fontWeight: '600',&#10;    cursor: 'pointer',&#10;    display: 'flex',&#10;    alignItems: 'center',&#10;    gap: '8px',&#10;    boxShadow: '0 4px 14px rgba(239, 68, 68, 0.4)',&#10;    transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',&#10;    '&amp;:hover': {&#10;      transform: 'translateY(-2px)',&#10;      boxShadow: '0 8px 25px rgba(239, 68, 68, 0.4)',&#10;    }&#10;  },&#10;  disabledButton: {&#10;    opacity: 0.5,&#10;    cursor: 'not-allowed',&#10;    '&amp;:hover': {&#10;      transform: 'none',&#10;    }&#10;  },&#10;  loadingButton: {&#10;    opacity: 0.8,&#10;  },&#10;  buttonIcon: {&#10;    fontSize: '16px',&#10;  },&#10;  spinner: {&#10;    fontSize: '16px',&#10;    animation: 'spin 1s linear infinite',&#10;  },&#10;  errorCard: {&#10;    background: '#fef2f2',&#10;    border: '1px solid #fecaca',&#10;    borderRadius: '12px',&#10;    padding: '16px 20px',&#10;    display: 'flex',&#10;    alignItems: 'center',&#10;    gap: '12px',&#10;    animation: 'shake 0.5s ease-in-out',&#10;  },&#10;  errorIcon: {&#10;    fontSize: '20px',&#10;  },&#10;  errorText: {&#10;    color: '#dc2626',&#10;    fontSize: '14px',&#10;    fontWeight: '500',&#10;  },&#10;  summarySection: {&#10;    background: 'rgba(255, 255, 255, 0.1)',&#10;    borderRadius: '24px',&#10;    padding: '32px',&#10;    boxShadow: '0 25px 50px rgba(0, 0, 0, 0.2)',&#10;    backdropFilter: 'blur(20px)',&#10;    border: '1px solid rgba(255, 255, 255, 0.2)',&#10;  },&#10;  summaryHeader: {&#10;    display: 'flex',&#10;    alignItems: 'center',&#10;    gap: '12px',&#10;    marginBottom: '24px',&#10;  },&#10;  summaryIcon: {&#10;    fontSize: '24px',&#10;  },&#10;  summaryTitle: {&#10;    fontSize: '24px',&#10;    fontWeight: '700',&#10;    color: '#ffffff',&#10;    margin: 0,&#10;  },&#10;  summaryGrid: {&#10;    display: 'grid',&#10;    gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',&#10;    gap: '16px',&#10;    marginBottom: '24px',&#10;  },&#10;  summaryCard: {&#10;    background: 'rgba(255, 255, 255, 0.15)',&#10;    borderRadius: '16px',&#10;    padding: '24px',&#10;    border: '1px solid rgba(255, 255, 255, 0.2)',&#10;    display: 'flex',&#10;    flexDirection: 'column',&#10;    alignItems: 'center',&#10;    gap: '8px',&#10;    transition: 'all 0.3s ease',&#10;    backdropFilter: 'blur(10px)',&#10;    '&amp;:hover': {&#10;      transform: 'translateY(-4px)',&#10;      boxShadow: '0 12px 30px rgba(0, 0, 0, 0.1)',&#10;    }&#10;  },&#10;  summaryCardIcon: {&#10;    fontSize: '32px',&#10;  },&#10;  summaryCardLabel: {&#10;    fontSize: '14px',&#10;    color: 'rgba(255, 255, 255, 0.8)',&#10;    fontWeight: '500',&#10;  },&#10;  summaryCardValue: {&#10;    fontSize: '28px',&#10;    fontWeight: '700',&#10;    color: '#ffffff',&#10;  },&#10;  successMessage: {&#10;    background: '#f0fdf4',&#10;    border: '1px solid #bbf7d0',&#10;    borderRadius: '12px',&#10;    padding: '16px 20px',&#10;    display: 'flex',&#10;    alignItems: 'center',&#10;    gap: '12px',&#10;    marginBottom: '16px',&#10;  },&#10;  successIcon: {&#10;    fontSize: '20px',&#10;  },&#10;  successText: {&#10;    color: '#15803d',&#10;    fontSize: '16px',&#10;    fontWeight: '600',&#10;  },&#10;  skippedSection: {&#10;    background: '#fef3c7',&#10;    border: '1px solid #f59e0b',&#10;    borderRadius: '12px',&#10;    padding: '16px 20px',&#10;  },&#10;  skippedTitle: {&#10;    fontSize: '16px',&#10;    fontWeight: '600',&#10;    color: '#92400e',&#10;    margin: '0 0 12px 0',&#10;  },&#10;  skippedList: {&#10;    display: 'flex',&#10;    flexWrap: 'wrap',&#10;    gap: '8px',&#10;  },&#10;  skippedItem: {&#10;    background: '#fed7aa',&#10;    color: '#9a3412',&#10;    padding: '4px 8px',&#10;    borderRadius: '6px',&#10;    fontSize: '12px',&#10;    fontWeight: '500',&#10;  },&#10;  resultsSection: {&#10;    background: 'rgba(255, 255, 255, 0.1)',&#10;    borderRadius: '24px',&#10;    padding: '32px',&#10;    boxShadow: '0 25px 50px rgba(0, 0, 0, 0.2)',&#10;    backdropFilter: 'blur(20px)',&#10;    border: '1px solid rgba(255, 255, 255, 0.2)',&#10;  },&#10;  resultsHeader: {&#10;    display: 'flex',&#10;    alignItems: 'center',&#10;    gap: '12px',&#10;    marginBottom: '24px',&#10;    justifyContent: 'space-between',&#10;    flexWrap: 'wrap',&#10;  },&#10;  resultsIcon: {&#10;    fontSize: '24px',&#10;  },&#10;  resultsTitle: {&#10;    fontSize: '24px',&#10;    fontWeight: '700',&#10;    color: '#ffffff',&#10;    margin: 0,&#10;    flex: 1,&#10;  },&#10;  resultsBadge: {&#10;    background: '#3b82f6',&#10;    color: 'white',&#10;    padding: '8px 16px',&#10;    borderRadius: '12px',&#10;    fontSize: '14px',&#10;    fontWeight: '600',&#10;  },&#10;  tableContainer: {&#10;    overflowX: 'auto',&#10;    borderRadius: '16px',&#10;    border: '1px solid #e2e8f0',&#10;  },&#10;  table: {&#10;    width: '100%',&#10;    borderCollapse: 'collapse',&#10;    fontSize: '14px',&#10;    backgroundColor: 'white',&#10;  },&#10;  th: {&#10;    padding: '16px 12px',&#10;    background: 'linear-gradient(135deg, #1e293b, #334155)',&#10;    color: 'white',&#10;    textAlign: 'left',&#10;    fontWeight: '600',&#10;    fontSize: '14px',&#10;    letterSpacing: '0.5px',&#10;    borderBottom: 'none',&#10;  },&#10;  tr: {&#10;    transition: 'all 0.3s ease',&#10;    '&amp;:hover': {&#10;      backgroundColor: '#f8fafc',&#10;    }&#10;  },&#10;  td: {&#10;    padding: '16px 12px',&#10;    borderBottom: '1px solid #e2e8f0',&#10;    color: '#374151',&#10;    textAlign: 'center',&#10;    backgroundColor: 'rgba(255,255,255,0.85)',&#10;    color: '#222',&#10;    border: '1px solid #ddd',&#10;  },&#10;};&#10;&#10;export default NICUploadPage;&#10;" />
              <option name="updatedContent" value="import React, { useState, useMemo, useRef, useEffect } from 'react';&#10;import { uploadNICFiles } from '../services/nicService';&#10;import Navbar from '../components/Navbar';&#10;import UploadHeader from '../components/upload/UploadHeader';&#10;import FileUploadArea from '../components/upload/FileUploadArea';&#10;import FileList from '../components/upload/FileList';&#10;import ActionButtons from '../components/upload/ActionButtons';&#10;import ErrorMessage from '../components/upload/ErrorMessage';&#10;import ProcessingSummary from '../components/upload/ProcessingSummary';&#10;import ResultsTable from '../components/upload/ResultsTable';&#10;&#10;const NICUploadPage = () =&gt; {&#10;  const [files, setFiles] = useState([]);&#10;  const [results, setResults] = useState([]);&#10;  const [responseInfo, setResponseInfo] = useState(null);&#10;  const [error, setError] = useState('');&#10;  const [isUploading, setIsUploading] = useState(false);&#10;  const [dragActive, setDragActive] = useState(false);&#10;  const [windowWidth, setWindowWidth] = useState(window.innerWidth);&#10;  const fileInputRef = useRef(null);&#10;&#10;  // Window resize handler for responsive design&#10;  useEffect(() =&gt; {&#10;    const handleResize = () =&gt; setWindowWidth(window.innerWidth);&#10;    window.addEventListener('resize', handleResize);&#10;    return () =&gt; window.removeEventListener('resize', handleResize);&#10;  }, []);&#10;&#10;  // Mobile breakpoint check&#10;  const isMobile = windowWidth &lt;= 768;&#10;  const isTablet = windowWidth &lt;= 1024;&#10;&#10;  // Helper: check exactly 4 CSV files selected&#10;  const isValidSelection = useMemo(() =&gt; {&#10;    if (files.length !== 4) return false;&#10;    return files.every(&#10;      (f) =&gt;&#10;        f.name.toLowerCase().endsWith('.csv') ||&#10;        f.type === 'text/csv' ||&#10;        f.type === 'application/vnd.ms-excel'&#10;    );&#10;  }, [files]);&#10;&#10;  const handleFileChange = (e) =&gt; {&#10;    const picked = Array.from(e.target.files || []);&#10;    const onlyCsv = picked.filter(&#10;      (f) =&gt;&#10;        f.name.toLowerCase().endsWith('.csv') ||&#10;        f.type === 'text/csv' ||&#10;        f.type === 'application/vnd.ms-excel'&#10;    );&#10;    setFiles(onlyCsv);&#10;&#10;    if (picked.length !== 4) {&#10;      setError('Please select exactly 4 files.');&#10;    } else if (onlyCsv.length !== 4) {&#10;      setError('All 4 files must be CSV (.csv).');&#10;    } else {&#10;      setError('');&#10;    }&#10;  };&#10;&#10;  const handleDrag = (e) =&gt; {&#10;    e.preventDefault();&#10;    e.stopPropagation();&#10;    if (e.type === &quot;dragenter&quot; || e.type === &quot;dragover&quot;) {&#10;      setDragActive(true);&#10;    } else if (e.type === &quot;dragleave&quot;) {&#10;      setDragActive(false);&#10;    }&#10;  };&#10;&#10;  const handleDrop = (e) =&gt; {&#10;    e.preventDefault();&#10;    e.stopPropagation();&#10;    setDragActive(false);&#10;&#10;    if (e.dataTransfer.files &amp;&amp; e.dataTransfer.files[0]) {&#10;      const droppedFiles = Array.from(e.dataTransfer.files);&#10;      const onlyCsv = droppedFiles.filter(&#10;        (f) =&gt;&#10;          f.name.toLowerCase().endsWith('.csv') ||&#10;          f.type === 'text/csv' ||&#10;          f.type === 'application/vnd.ms-excel'&#10;      );&#10;      setFiles(onlyCsv);&#10;&#10;      if (droppedFiles.length !== 4) {&#10;        setError('Please select exactly 4 files.');&#10;      } else if (onlyCsv.length !== 4) {&#10;        setError('All 4 files must be CSV (.csv).');&#10;      } else {&#10;        setError('');&#10;      }&#10;    }&#10;  };&#10;&#10;  const handleUpload = async () =&gt; {&#10;    if (!isValidSelection) {&#10;      setError('Please upload exactly 4 CSV files.');&#10;      return;&#10;    }&#10;&#10;    setIsUploading(true);&#10;    try {&#10;      const token = localStorage.getItem('token');&#10;      const response = await uploadNICFiles(files, token);&#10;&#10;      setResults(response?.records || []);&#10;      setResponseInfo({&#10;        message: response?.message || 'Upload completed.',&#10;        filesProcessed: response?.filesProcessed ?? files.length,&#10;        inserted: response?.inserted ?? 0,&#10;        skipped: response?.skipped ?? 0,&#10;        skippedNICs: response?.skippedNICs || [],&#10;      });&#10;      setError('');&#10;    } catch (err) {&#10;      console.error(err);&#10;      setError('Upload failed. Please try again.');&#10;    }&#10;    setIsUploading(false);&#10;  };&#10;&#10;  const handleClear = () =&gt; {&#10;    setFiles([]);&#10;    setResults([]);&#10;    setResponseInfo(null);&#10;    setError('');&#10;    if (fileInputRef.current) fileInputRef.current.value = '';&#10;  };&#10;&#10;  const formatFileSize = (bytes) =&gt; {&#10;    if (bytes === 0) return '0 Bytes';&#10;    const k = 1024;&#10;    const sizes = ['Bytes', 'KB', 'MB', 'GB'];&#10;    const i = Math.floor(Math.log(bytes) / Math.log(k));&#10;    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];&#10;  };&#10;&#10;  const RotatingBackground = () =&gt; (&#10;    &lt;div style={{&#10;      position: 'fixed',&#10;      top: '-50%',&#10;      left: '-50%',&#10;      width: '200%',&#10;      height: '250%',&#10;      backgroundImage: `url('https://images.unsplash.com/photo-1451187580459-43490279c0fa?ixlib=rb-4.0.3&amp;auto=format&amp;fit=crop&amp;w=2072&amp;q=80')`,&#10;      backgroundSize: 'cover',&#10;      backgroundPosition: 'center',&#10;      animation: 'slowRotate 600s linear infinite',&#10;    }} /&gt;&#10;  );&#10;&#10;  return (&#10;    &lt;&gt;&#10;      &lt;Navbar /&gt;&#10;      &lt;div style={styles.wrapper}&gt;&#10;        &lt;RotatingBackground /&gt;&#10;        &lt;div style={styles.container}&gt;&#10;          {/* Header Section */}&#10;          &lt;UploadHeader styles={styles} isMobile={isMobile} isTablet={isTablet} /&gt;&#10;&#10;          {/* Upload Section */}&#10;          &lt;div style={{&#10;            ...styles.uploadSection,&#10;            padding: isMobile ? '24px' : '40px'&#10;          }}&gt;&#10;            &lt;input&#10;              ref={fileInputRef}&#10;              type=&quot;file&quot;&#10;              multiple&#10;              accept=&quot;.csv,text/csv&quot;&#10;              onChange={handleFileChange}&#10;              style={styles.hiddenInput}&#10;            /&gt;&#10;&#10;            &lt;FileUploadArea&#10;              styles={styles}&#10;              dragActive={dragActive}&#10;              files={files}&#10;              handleDrag={handleDrag}&#10;              handleDrop={handleDrop}&#10;              fileInputRef={fileInputRef}&#10;              isMobile={isMobile}&#10;              isTablet={isTablet}&#10;            /&gt;&#10;&#10;            &lt;FileList&#10;              styles={styles}&#10;              files={files}&#10;              isValidSelection={isValidSelection}&#10;              formatFileSize={formatFileSize}&#10;              isMobile={isMobile}&#10;              isTablet={isTablet}&#10;            /&gt;&#10;&#10;            &lt;ActionButtons&#10;              styles={styles}&#10;              handleUpload={handleUpload}&#10;              handleClear={handleClear}&#10;              isValidSelection={isValidSelection}&#10;              isUploading={isUploading}&#10;              isMobile={isMobile}&#10;              isTablet={isTablet}&#10;            /&gt;&#10;&#10;            &lt;ErrorMessage&#10;              styles={styles}&#10;              error={error}&#10;              isMobile={isMobile}&#10;              isTablet={isTablet}&#10;            /&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;ProcessingSummary&#10;            styles={styles}&#10;            responseInfo={responseInfo}&#10;            isMobile={isMobile}&#10;            isTablet={isTablet}&#10;          /&gt;&#10;&#10;          &lt;ResultsTable&#10;            styles={styles}&#10;            results={results}&#10;            isMobile={isMobile}&#10;            isTablet={isTablet}&#10;          /&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Enhanced CSS Animations */}&#10;      &lt;style&gt;{`&#10;        @keyframes fadeInUp {&#10;          from {&#10;            opacity: 0;&#10;            transform: translateY(30px);&#10;          }&#10;          to {&#10;            opacity: 1;&#10;            transform: translateY(0);&#10;          }&#10;        }&#10;&#10;        @keyframes slideInLeft {&#10;          from {&#10;            opacity: 0;&#10;            transform: translateX(-30px);&#10;          }&#10;          to {&#10;            opacity: 1;&#10;            transform: translateX(0);&#10;          }&#10;        }&#10;&#10;        @keyframes pulse {&#10;          0%, 100% {&#10;            transform: scale(1);&#10;          }&#10;          50% {&#10;            transform: scale(1.05);&#10;          }&#10;        }&#10;&#10;        @keyframes spin {&#10;          from { transform: rotate(0deg); }&#10;          to { transform: rotate(360deg); }&#10;        }&#10;&#10;        @keyframes shake {&#10;          0%, 100% { transform: translateX(0); }&#10;          10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }&#10;          20%, 40%, 60%, 80% { transform: translateX(5px); }&#10;        }&#10;&#10;        /* Slow Rotating Background Animation */&#10;        @keyframes slowRotate {&#10;          from {&#10;            transform: rotate(0deg);&#10;          }&#10;          to {&#10;            transform: rotate(360deg);&#10;          }&#10;        }&#10;&#10;        .fade-in-up {&#10;          animation: fadeInUp 0.6s ease-out;&#10;        }&#10;&#10;        .slide-in-left {&#10;          animation: slideInLeft 0.5s ease-out;&#10;        }&#10;&#10;        .pulse-animation {&#10;          animation: pulse 2s ease-in-out infinite;&#10;        }&#10;&#10;        .spin-animation {&#10;          animation: spin 1s linear infinite;&#10;        }&#10;&#10;        .shake-animation {&#10;          animation: shake 0.5s ease-in-out;&#10;        }&#10;&#10;        /* Hover Effects */&#10;        .hover-lift {&#10;          transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);&#10;        }&#10;&#10;        .hover-lift:hover {&#10;          transform: translateY(-4px);&#10;          box-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);&#10;        }&#10;&#10;        /* Responsive */&#10;        @media (max-width: 768px) {&#10;          .fade-in-up {&#10;            animation: fadeInUp 0.4s ease-out;&#10;          }&#10;        }&#10;&#10;        /* Reduce motion for accessibility */&#10;        @media (prefers-reduced-motion: reduce) {&#10;          .slowRotate {&#10;            animation: none !important;&#10;          }&#10;        }&#10;      `}&lt;/style&gt;&#10;    &lt;/&gt;&#10;  );&#10;};&#10;&#10;const styles = {&#10;  wrapper: {&#10;    minHeight: '100vh',&#10;    background: `linear-gradient(135deg, rgba(15, 23, 42, 0.9) 0%, rgba(30, 41, 59, 0.85) 25%, rgba(51, 65, 85, 0.8) 50%, rgba(71, 85, 105, 0.75) 75%, rgba(100, 116, 139, 0.7) 100%)`,&#10;    padding: '100px 20px 40px',&#10;    display: 'flex',&#10;    justifyContent: 'center',&#10;    fontFamily: &quot;'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif&quot;,&#10;    position: 'relative',&#10;    overflow: 'hidden',&#10;  },&#10;  container: {&#10;    maxWidth: '1000px',&#10;    width: '100%',&#10;    display: 'flex',&#10;    flexDirection: 'column',&#10;    gap: '32px',&#10;  },&#10;  header: {&#10;    textAlign: 'center',&#10;    color: 'white',&#10;    marginBottom: '20px',&#10;  },&#10;  headerIcon: {&#10;    width: '80px',&#10;    height: '80px',&#10;    borderRadius: '50%',&#10;    background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))',&#10;    display: 'flex',&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;    margin: '0 auto 24px',&#10;    backdropFilter: 'blur(20px)',&#10;    border: '2px solid rgba(255, 255, 255, 0.2)',&#10;    boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)',&#10;  },&#10;  iconEmoji: {&#10;    fontSize: '36px',&#10;  },&#10;  title: {&#10;    fontSize: '48px',&#10;    fontWeight: '700',&#10;    margin: '0 0 16px 0',&#10;    letterSpacing: '-1px',&#10;    textShadow: '0 2px 4px rgba(0, 0, 0, 0.3)',&#10;    opacity:0.9,&#10;  },&#10;  subtitle: {&#10;    fontSize: '18px',&#10;    opacity: 0.9,&#10;    margin: 0,&#10;    fontWeight: '400',&#10;    color: 'rgba(255, 255, 255, 0.8)',&#10;  },&#10;  uploadSection: {&#10;    background: 'rgba(255, 255, 255, 0.1)',&#10;    borderRadius: '24px',&#10;    padding: '40px',&#10;    boxShadow: '0 25px 50px rgba(0, 0, 0, 0.2)',&#10;    backdropFilter: 'blur(20px)',&#10;    border: '1px solid rgba(255, 255, 255, 0.2)',&#10;  },&#10;  uploadArea: {&#10;    border: '3px dashed rgba(255, 255, 255, 0.4)',&#10;    borderRadius: '16px',&#10;    padding: '48px 24px',&#10;    textAlign: 'center',&#10;    cursor: 'pointer',&#10;    transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',&#10;    background: 'rgba(255, 255, 255, 0.1)', // Changed from 0.05 to 0.1 for better visibility&#10;    backdropFilter: 'blur(20px)', // Added glassmorphism effect&#10;    marginBottom: '24px',&#10;  },&#10;  uploadAreaActive: {&#10;    borderColor: 'rgba(59, 130, 246, 0.8)',&#10;    background: 'rgba(59, 130, 246, 0.1)',&#10;    transform: 'scale(1.02)',&#10;  },&#10;  uploadAreaWithFiles: {&#10;    borderColor: 'rgba(16, 185, 129, 0.8)',&#10;    background: 'rgba(16, 185, 129, 0.1)',&#10;  },&#10;  hiddenInput: {&#10;    display: 'none',&#10;  },&#10;  uploadContent: {&#10;    display: 'flex',&#10;    flexDirection: 'column',&#10;    alignItems: 'center',&#10;    gap: '16px',&#10;  },&#10;  uploadIcon: {&#10;    width: '64px',&#10;    height: '64px',&#10;    borderRadius: '50%',&#10;    background: 'linear-gradient(135deg, #3b82f6, #1d4ed8)',&#10;    display: 'flex',&#10;    alignItems: 'center',&#10;    justifyContent: 'center',&#10;    boxShadow: '0 8px 25px rgba(59, 130, 246, 0.3)',&#10;  },&#10;  uploadIconEmoji: {&#10;    fontSize: '28px',&#10;  },&#10;  uploadTitle: {&#10;    fontSize: '24px',&#10;    fontWeight: '700',&#10;    color: '#ffffff', // Ensured white text&#10;    margin: 0,&#10;    textShadow: '0 2px 4px rgba(0, 0, 0, 0.3)', // Added text shadow for better visibility&#10;  },&#10;  uploadText: {&#10;    fontSize: '16px',&#10;    color: 'rgba(255, 255, 255, 0.9)', // Increased opacity for better visibility&#10;    margin: 0,&#10;    textShadow: '0 1px 2px rgba(0, 0, 0, 0.3)', // Added text shadow&#10;  },&#10;  uploadRequirements: {&#10;    display: 'flex',&#10;    gap: '24px',&#10;    flexWrap: 'wrap',&#10;    justifyContent: 'center',&#10;  },&#10;  requirement: {&#10;    fontSize: '14px',&#10;    color: 'rgba(255, 255, 255, 0.9)', // Increased opacity&#10;    background: 'rgba(255, 255, 255, 0.2)', // Increased background opacity&#10;    padding: '8px 16px',&#10;    borderRadius: '20px',&#10;    fontWeight: '500',&#10;    border: '1px solid rgba(255, 255, 255, 0.3)', // Added border for definition&#10;    backdropFilter: 'blur(10px)', // Added glassmorphism&#10;  },&#10;  fileList: {&#10;    background: 'rgba(255, 255, 255, 0.15)',&#10;    borderRadius: '16px',&#10;    padding: '24px',&#10;    marginBottom: '24px',&#10;    border: '1px solid rgba(255, 255, 255, 0.2)',&#10;    backdropFilter: 'blur(10px)',&#10;  },&#10;  fileListHeader: {&#10;    display: 'flex',&#10;    justifyContent: 'space-between',&#10;    alignItems: 'center',&#10;    marginBottom: '16px',&#10;  },&#10;  fileListTitle: {&#10;    fontSize: '18px',&#10;    fontWeight: '600',&#10;    color: '#ffffff',&#10;  },&#10;  validBadge: {&#10;    background: '#10b981',&#10;    color: 'white',&#10;    padding: '6px 12px',&#10;    borderRadius: '12px',&#10;    fontSize: '12px',&#10;    fontWeight: '600',&#10;  },&#10;  fileGrid: {&#10;    display: 'grid',&#10;    gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',&#10;    gap: '12px',&#10;    marginBottom: '16px',&#10;  },&#10;  fileCard: {&#10;    background: 'rgba(255, 255, 255, 0.2)',&#10;    borderRadius: '12px',&#10;    padding: '16px',&#10;    border: '1px solid rgba(255, 255, 255, 0.3)',&#10;    transition: 'all 0.3s ease',&#10;    backdropFilter: 'blur(10px)',&#10;    '&amp;:hover': {&#10;      boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',&#10;      transform: 'translateY(-2px)',&#10;    }&#10;  },&#10;  fileCardHeader: {&#10;    display: 'flex',&#10;    alignItems: 'center',&#10;    gap: '8px',&#10;    marginBottom: '8px',&#10;  },&#10;  fileIcon: {&#10;    fontSize: '20px',&#10;  },&#10;  fileName: {&#10;    fontSize: '14px',&#10;    fontWeight: '600',&#10;    color: '#ffffff',&#10;    overflow: 'hidden',&#10;    textOverflow: 'ellipsis',&#10;    whiteSpace: 'nowrap',&#10;    flex: 1,&#10;  },&#10;  fileDetails: {&#10;    display: 'flex',&#10;    justifyContent: 'space-between',&#10;    alignItems: 'center',&#10;  },&#10;  fileSize: {&#10;    fontSize: '12px',&#10;    color: 'rgba(255, 255, 255, 0.8)',&#10;  },&#10;  fileType: {&#10;    background: 'rgba(59, 130, 246, 0.2)',&#10;    color: '#ffffff',&#10;    padding: '2px 8px',&#10;    borderRadius: '6px',&#10;    fontSize: '10px',&#10;    fontWeight: '600',&#10;    border: '1px solid rgba(59, 130, 246, 0.3)',&#10;  },&#10;  warningCard: {&#10;    background: '#fef3c7',&#10;    border: '1px solid #f59e0b',&#10;    borderRadius: '12px',&#10;    padding: '12px 16px',&#10;    display: 'flex',&#10;    alignItems: 'center',&#10;    gap: '8px',&#10;  },&#10;  warningIcon: {&#10;    fontSize: '16px',&#10;  },&#10;  warningText: {&#10;    color: '#92400e',&#10;    fontSize: '14px',&#10;    fontWeight: '500',&#10;  },&#10;  actionButtons: {&#10;    display: 'flex',&#10;    gap: '16px',&#10;    justifyContent: 'center',&#10;    marginBottom: '24px',&#10;    flexWrap: 'wrap',&#10;  },&#10;  primaryButton: {&#10;    background: 'linear-gradient(135deg, #3b82f6, #1d4ed8)',&#10;    color: 'white',&#10;    border: 'none',&#10;    borderRadius: '12px',&#10;    padding: '16px 32px',&#10;    fontSize: '16px',&#10;    fontWeight: '600',&#10;    cursor: 'pointer',&#10;    display: 'flex',&#10;    alignItems: 'center',&#10;    gap: '8px',&#10;    boxShadow: '0 4px 14px rgba(59, 130, 246, 0.4)',&#10;    transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',&#10;    '&amp;:hover': {&#10;      transform: 'translateY(-2px)',&#10;      boxShadow: '0 8px 25px rgba(59, 130, 246, 0.4)',&#10;    }&#10;  },&#10;  secondaryButton: {&#10;    background: 'linear-gradient(135deg, #ef4444, #dc2626)',&#10;    color: 'white',&#10;    border: 'none',&#10;    borderRadius: '12px',&#10;    padding: '16px 32px',&#10;    fontSize: '16px',&#10;    fontWeight: '600',&#10;    cursor: 'pointer',&#10;    display: 'flex',&#10;    alignItems: 'center',&#10;    gap: '8px',&#10;    boxShadow: '0 4px 14px rgba(239, 68, 68, 0.4)',&#10;    transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',&#10;    '&amp;:hover': {&#10;      transform: 'translateY(-2px)',&#10;      boxShadow: '0 8px 25px rgba(239, 68, 68, 0.4)',&#10;    }&#10;  },&#10;  disabledButton: {&#10;    opacity: 0.5,&#10;    cursor: 'not-allowed',&#10;    '&amp;:hover': {&#10;      transform: 'none',&#10;    }&#10;  },&#10;  loadingButton: {&#10;    opacity: 0.8,&#10;  },&#10;  buttonIcon: {&#10;    fontSize: '16px',&#10;  },&#10;  spinner: {&#10;    fontSize: '16px',&#10;    animation: 'spin 1s linear infinite',&#10;  },&#10;  errorCard: {&#10;    background: '#fef2f2',&#10;    border: '1px solid #fecaca',&#10;    borderRadius: '12px',&#10;    padding: '16px 20px',&#10;    display: 'flex',&#10;    alignItems: 'center',&#10;    gap: '12px',&#10;    animation: 'shake 0.5s ease-in-out',&#10;  },&#10;  errorIcon: {&#10;    fontSize: '20px',&#10;  },&#10;  errorText: {&#10;    color: '#dc2626',&#10;    fontSize: '14px',&#10;    fontWeight: '500',&#10;  },&#10;  summarySection: {&#10;    background: 'rgba(255, 255, 255, 0.1)',&#10;    borderRadius: '24px',&#10;    padding: '32px',&#10;    boxShadow: '0 25px 50px rgba(0, 0, 0, 0.2)',&#10;    backdropFilter: 'blur(20px)',&#10;    border: '1px solid rgba(255, 255, 255, 0.2)',&#10;  },&#10;  summaryHeader: {&#10;    display: 'flex',&#10;    alignItems: 'center',&#10;    gap: '12px',&#10;    marginBottom: '24px',&#10;  },&#10;  summaryIcon: {&#10;    fontSize: '24px',&#10;  },&#10;  summaryTitle: {&#10;    fontSize: '24px',&#10;    fontWeight: '700',&#10;    color: '#ffffff',&#10;    margin: 0,&#10;  },&#10;  summaryGrid: {&#10;    display: 'grid',&#10;    gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',&#10;    gap: '16px',&#10;    marginBottom: '24px',&#10;  },&#10;  summaryCard: {&#10;    background: 'rgba(255, 255, 255, 0.15)',&#10;    borderRadius: '16px',&#10;    padding: '24px',&#10;    border: '1px solid rgba(255, 255, 255, 0.2)',&#10;    display: 'flex',&#10;    flexDirection: 'column',&#10;    alignItems: 'center',&#10;    gap: '8px',&#10;    transition: 'all 0.3s ease',&#10;    backdropFilter: 'blur(10px)',&#10;    '&amp;:hover': {&#10;      transform: 'translateY(-4px)',&#10;      boxShadow: '0 12px 30px rgba(0, 0, 0, 0.1)',&#10;    }&#10;  },&#10;  summaryCardIcon: {&#10;    fontSize: '32px',&#10;  },&#10;  summaryCardLabel: {&#10;    fontSize: '14px',&#10;    color: 'rgba(255, 255, 255, 0.8)',&#10;    fontWeight: '500',&#10;  },&#10;  summaryCardValue: {&#10;    fontSize: '28px',&#10;    fontWeight: '700',&#10;    color: '#ffffff',&#10;  },&#10;  successMessage: {&#10;    background: '#f0fdf4',&#10;    border: '1px solid #bbf7d0',&#10;    borderRadius: '12px',&#10;    padding: '16px 20px',&#10;    display: 'flex',&#10;    alignItems: 'center',&#10;    gap: '12px',&#10;    marginBottom: '16px',&#10;  },&#10;  successIcon: {&#10;    fontSize: '20px',&#10;  },&#10;  successText: {&#10;    color: '#15803d',&#10;    fontSize: '16px',&#10;    fontWeight: '600',&#10;  },&#10;  skippedSection: {&#10;    background: '#fef3c7',&#10;    border: '1px solid #f59e0b',&#10;    borderRadius: '12px',&#10;    padding: '16px 20px',&#10;  },&#10;  skippedTitle: {&#10;    fontSize: '16px',&#10;    fontWeight: '600',&#10;    color: '#92400e',&#10;    margin: '0 0 12px 0',&#10;  },&#10;  skippedList: {&#10;    display: 'flex',&#10;    flexWrap: 'wrap',&#10;    gap: '8px',&#10;  },&#10;  skippedItem: {&#10;    background: '#fed7aa',&#10;    color: '#9a3412',&#10;    padding: '4px 8px',&#10;    borderRadius: '6px',&#10;    fontSize: '12px',&#10;    fontWeight: '500',&#10;  },&#10;  resultsSection: {&#10;    background: 'rgba(255, 255, 255, 0.1)',&#10;    borderRadius: '24px',&#10;    padding: '32px',&#10;    boxShadow: '0 25px 50px rgba(0, 0, 0, 0.2)',&#10;    backdropFilter: 'blur(20px)',&#10;    border: '1px solid rgba(255, 255, 255, 0.2)',&#10;  },&#10;  resultsHeader: {&#10;    display: 'flex',&#10;    alignItems: 'center',&#10;    gap: '12px',&#10;    marginBottom: '24px',&#10;    justifyContent: 'space-between',&#10;    flexWrap: 'wrap',&#10;  },&#10;  resultsIcon: {&#10;    fontSize: '24px',&#10;  },&#10;  resultsTitle: {&#10;    fontSize: '24px',&#10;    fontWeight: '700',&#10;    color: '#ffffff',&#10;    margin: 0,&#10;    flex: 1,&#10;  },&#10;  resultsBadge: {&#10;    background: '#3b82f6',&#10;    color: 'white',&#10;    padding: '8px 16px',&#10;    borderRadius: '12px',&#10;    fontSize: '14px',&#10;    fontWeight: '600',&#10;  },&#10;  tableContainer: {&#10;    overflowX: 'auto',&#10;    borderRadius: '16px',&#10;    border: '1px solid #e2e8f0',&#10;  },&#10;  table: {&#10;    width: '100%',&#10;    borderCollapse: 'collapse',&#10;    fontSize: '14px',&#10;    backgroundColor: 'white',&#10;  },&#10;  th: {&#10;    padding: '16px 12px',&#10;    background: 'linear-gradient(135deg, #1e293b, #334155)',&#10;    color: 'white',&#10;    textAlign: 'left',&#10;    fontWeight: '600',&#10;    fontSize: '14px',&#10;    letterSpacing: '0.5px',&#10;    borderBottom: 'none',&#10;  },&#10;  tr: {&#10;    transition: 'all 0.3s ease',&#10;    '&amp;:hover': {&#10;      backgroundColor: '#f8fafc',&#10;    }&#10;  },&#10;  td: {&#10;    padding: '16px 12px',&#10;    borderBottom: '1px solid #e2e8f0',&#10;    color: '#374151',&#10;    textAlign: 'center',&#10;    backgroundColor: 'rgba(255,255,255,0.85)',&#10;    color: '#222',&#10;    border: '1px solid #ddd',&#10;  },&#10;};&#10;&#10;export default NICUploadPage;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>